#!/bin/csh -f
#
set DEBUG = "" ;
set TEST = "" ;
set HELP = 0 ;
set ULAW = 0 ;
set ALAW = 0 ;
set HEAD = "head --lines=4 " ;
set i = 1 ;

#
# collect arguments
#
while ( $i <= $#argv )
  switch ( ${argv[${i}]} )
    case "-u":
    case "-ulaw":
      set ULAW = 1 ;
      breaksw
    case "-a":
    case "-alaw":
      set ALAW = 1 ;
      breaksw
    case "-d":
    case "-debug":
      set DEBUG = " -d " ;
      breaksw
    case "-t":
    case "-test":
      set TEST = " -t " ;
      breaksw
    case "-h":
    case "-help":
      set HELP = 1 ;
      breaksw
    default:
      breaksw
  endsw
  @ i = $i + 1 ;
end

#
# print usage
#
if ($HELP) then
  echo "USAGE : $0 [-ulaw] [-alaw] [-debug] [-test] [-help]"
  echo "        -ulaw  : run only ulaw tests";
  echo "        -alaw  : run only alaw tests";
  echo "        -debug : enable debug printing";
  echo "        -test  : enable codec state printing";
  echo "        -help  : print help message";
  exit
endif

if ((! $ULAW) && (! $ALAW)) then
	set ULAW = 1 ;
	set ALAW = 1 ;
endif


set ENC = "./enc ${DEBUG} ${TEST}"
set DEC = "./dec ${DEBUG} ${TEST}"
set STRIPINIT = "./stripInit"

if ($ULAW) then
cat test_vectors/ansi/u_law/init1.mu >! input_pcm.mu
cat test_vectors/ansi/u_law/vector1.mu >> input_pcm.mu

echo "u-law encoder/ decoder broad/ narrow band signal test"
${ENC} -i input_pcm.mu -o out_enc.mu
${STRIPINIT} -i out_enc.mu -o out_enc_strip.mu
echo " checking encoder results"
cmp out_enc_strip.mu test_vectors/ansi/u_law/vector2.mu
if ($status) then
  echo "" ; echo "result"
  ${HEAD} out_enc_strip.mu 
  echo "" ; echo "test vector"
  ${HEAD} test_vectors/ansi/u_law/vector2.mu
  echo ""
endif

${DEC} -i out_enc.mu -o out_dec.mu
${STRIPINIT} -i out_dec.mu -o out_dec_strip.mu
echo " checking decoder results"
cmp out_dec_strip.mu test_vectors/ansi/u_law/vector3.mu
if ($status) then
  echo "" ; echo "result"
  ${HEAD} out_dec_strip.mu 
  echo "" ; echo "test vector"
  ${HEAD} test_vectors/ansi/u_law/vector3.mu
  echo ""
endif

cat test_vectors/ansi/u_law/init2.mu >! input_pcm.mu
cat test_vectors/ansi/u_law/vector4.mu >> input_pcm.mu

echo "u-law decoder constant pattern signal test"
${DEC} -i input_pcm.mu -o out_dec.mu
${STRIPINIT} -i out_dec.mu -o out_dec_strip.mu
echo " checking decoder results"
cmp out_dec_strip.mu test_vectors/ansi/u_law/vector5.mu
if ($status) then
  echo "" ; echo "result"
  ${HEAD} out_dec_strip.mu 
  echo "" ; echo "test vector"
  ${HEAD} test_vectors/ansi/u_law/vector5.mu
  echo ""
endif

cat test_vectors/ansi/u_law/init1.mu >! input_pcm.mu
cat test_vectors/ansi/u_law/vector6.mu >> input_pcm.mu

echo "u-law encoder/ decoder overload band signal test"
${ENC} -i input_pcm.mu -o out_enc.mu
${STRIPINIT} -i out_enc.mu -o out_enc_strip.mu
echo " checking encoder results"
cmp out_enc_strip.mu test_vectors/ansi/u_law/vector7.mu
if ($status) then
  echo "" ; echo "result"
  ${HEAD} out_enc_strip.mu 
  echo "" ; echo "test vector"
  ${HEAD} test_vectors/ansi/u_law/vector7.mu
  echo ""
endif

${DEC} -i out_enc.mu -o out_dec.mu
${STRIPINIT} -i out_dec.mu -o out_dec_strip.mu
echo " checking decoder results"
cmp out_dec_strip.mu test_vectors/ansi/u_law/vector8.mu
if ($status) then
  echo "" ; echo "result"
  ${HEAD} out_dec_strip.mu 
  echo ""
  ${HEAD} test_vectors/ansi/u_law/vector8.mu
  echo "" ; echo "test vector"
endif
endif

if ($ALAW) then
cat test_vectors/ansi/a_law/init1.a >! input_pcm.a
cat test_vectors/ansi/a_law/vector1.a >> input_pcm.a

echo "a-law encoder/ decoder broad/ narrow band signal test"
${ENC} -a -i input_pcm.a -o out_enc.a
${STRIPINIT} -i out_enc.a -o out_enc_strip.a
echo " checking encoder results"
cmp out_enc_strip.a test_vectors/ansi/a_law/vector2.a
if ($status) then
  echo "" ; echo "result"
  ${HEAD} out_enc_strip.a
  echo "" ; echo "test vector"
  ${HEAD} test_vectors/ansi/a_law/vector2.a
  echo ""
endif

${DEC} -a -i out_enc.a -o out_dec.a
${STRIPINIT} -i out_dec.a -o out_dec_strip.a
echo " checking decoder results"
cmp out_dec_strip.a test_vectors/ansi/a_law/vector3.a
if ($status) then
  echo "" ; echo "result"
  ${HEAD} out_dec_strip.a
  echo "" ; echo "test vector"
  ${HEAD} test_vectors/ansi/a_law/vector3.a
  echo ""
endif

cat test_vectors/ansi/a_law/init2.a >! input_pcm.a
cat test_vectors/ansi/a_law/vector4.a >> input_pcm.a

echo "a-law decoder polarity sequence test"
${DEC} -a -i out_enc.a -o out_dec.a
${STRIPINIT} -i out_dec.a -o out_dec_strip.a
echo " checking decoder results"
cmp out_dec_strip.a test_vectors/ansi/a_law/vector5.a
if ($status) then
  echo "" ; echo "result"
  ${HEAD} out_dec_strip.a
  echo "" ; echo "test vector"
  ${HEAD} test_vectors/ansi/a_law/vector5.a
  echo ""
endif

cat test_vectors/ansi/a_law/init1.a >! input_pcm.a
cat test_vectors/ansi/a_law/vector6.a >> input_pcm.a

echo "a-law encoder/ decoder overload band signal test"
${ENC} -a -i input_pcm.a -o out_enc.a
${STRIPINIT} -i out_enc.a -o out_enc_strip.a
echo " checking encoder results"
cmp out_enc_strip.a test_vectors/ansi/a_law/vector7.a
if ($status) then
  echo "" ; echo "result"
  ${HEAD} out_enc_strip.a
  echo "" ; echo "test vector"
  ${HEAD} test_vectors/ansi/a_law/vector7.a
  echo ""
endif

${DEC} -a -i out_enc.a -o out_dec.a
${STRIPINIT} -i out_dec.a -o out_dec_strip.a
echo " checking decoder results"
cmp out_dec_strip.a test_vectors/ansi/a_law/vector8.a
if ($status) then
  echo "" ; echo "result"
  ${HEAD} out_dec_strip.a
  echo "" ; echo "test vector"
  ${HEAD} test_vectors/ansi/a_law/vector8.a
  echo ""
endif
endif
